/*
 * Copyright (c) 2016-2017 Aya Tokikaze. All Rights Reserved.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'

def APP_NAME = "biblio"
def VERSION = "0.1.0"
def PACKAGE_NAME = "com.ayatk.biblio"

// for debug info
def GIT_SHA = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
def GIT_BRANCH = (System.getenv("CIRCLE_BRANCH") != null) ? System.getenv("CIRCLE_BRANCH") :
    'git rev-parse --abbrev-ref HEAD'.execute([], project.rootDir).text.trim()
def BUILD_NUM = (System.getenv("CIRCLE_BUILD_NUM") != null) ? System.getenv("CIRCLE_BUILD_NUM") :
    "1"
def BUILD_TIME = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone("UTC"))

// Keys
def RELEASE_STORE_PASSWORD = (System.getenv("RELEASE_STORE_PASSWORD") != null) ?
    System.getenv("RELEASE_STORE_PASSWORD") : ""
def RELEASE_KEY_ALIAS = (System.getenv("RELEASE_KEY_ALIAS") != null) ?
    System.getenv("RELEASE_KEY_ALIAS") : ""
def RELEASE_KEY_PASSWORD = (System.getenv("RELEASE_KEY_PASSWORD") != null) ?
    System.getenv("RELEASE_KEY_PASSWORD") : ""
def FABRIC_API_KEY = (System.getenv("FABRIC_API_KEY") != null) ?
    System.getenv("RELEASE_KEY_ALIAS") : ""


def secretPropsFile = file("$rootDir/secret.properties")
if (secretPropsFile.canRead()) {
  Properties secretProps = new Properties()
  secretProps.load(new FileInputStream(secretPropsFile))
  RELEASE_STORE_PASSWORD = secretProps['RELEASE_STORE_PASSWORD']
  RELEASE_KEY_ALIAS = secretProps['RELEASE_KEY_ALIAS']
  RELEASE_KEY_PASSWORD = secretProps['RELEASE_KEY_PASSWORD']
  FABRIC_API_KEY = secretProps['FABRIC_API_KEY']
}

android {
  compileSdkVersion 26
  buildToolsVersion "26.0.1"

  defaultConfig {
    applicationId PACKAGE_NAME
    minSdkVersion 16
    targetSdkVersion 26
    versionCode BUILD_NUM.toInteger()
    versionName VERSION
    testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    vectorDrawables.useSupportLibrary true

    buildConfigField "String", "GIT_SHA", "\"${GIT_SHA}\""
    buildConfigField "String", "GIT_BRANCH", "\"${GIT_BRANCH}\""
    buildConfigField "String", "BUILD_NUM", "\"${BUILD_NUM}\""
    buildConfigField "String", "BUILD_TIME", "\"${BUILD_TIME}\""
    manifestPlaceholders = [FABRIC_API_KEY: FABRIC_API_KEY]
  }

  signingConfigs {
    release {
      storeFile file("$rootDir/app.release.jks")
      storePassword RELEASE_STORE_PASSWORD
      keyAlias RELEASE_KEY_ALIAS
      keyPassword RELEASE_KEY_PASSWORD
    }
    debug {
      storeFile file("$rootDir/app.debug.jks")
      storePassword 'android'
      keyAlias 'debug'
      keyPassword 'android'
    }
  }

  buildTypes {
    applicationVariants.all { variant ->
      if (variant.buildType.name == "debug" || variant.buildType.name == "release") {
        variant.outputs.each { output ->
          if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
            def newName = "${APP_NAME}-v${VERSION}" + output.outputFile.name.replaceFirst(/app/, '')
            output.outputFile = new File(output.outputFile.parent, newName)
          }
        }
      }
    }

    release {
      shrinkResources true
      debuggable false
      zipAlignEnabled true
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }

    debug {
      minifyEnabled false
      debuggable true
      zipAlignEnabled true
      applicationIdSuffix '.debug'
      versionNameSuffix "-debug"
      signingConfig signingConfigs.debug
    }
  }

  productFlavors {
    develop {
      // dev utilizes minSDKVersion = 21 to allow the Android gradle plugin
      // to pre-dex each module and produce an APK that can be tested on
      // Android Lollipop without time consuming dex merging processes.
      minSdkVersion 24
    }
    // use deploygate
    nightly {
      minSdkVersion 16
      applicationId "${PACKAGE_NAME}.nightly"
      versionName "${VERSION}-nightly"
    }
    production {
      // The actual minSdkVersion for the application.
      minSdkVersion 16
    }
  }

  sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
    debug.java.srcDirs += 'src/debug/kotlin'
    test.java.srcDirs += 'src/test/kotlin'
    androidTest.java.srcDirs += 'src/androidTest/kotlin'
  }

  packagingOptions {
    exclude 'META-INF/ASL2.0'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/MANIFEST.MF'
  }

  dataBinding {
    enabled = true
  }

  lintOptions {
    textReport true
    textOutput 'stdout'
    // ディープリンクは利用しないので、無効化
    disable 'GoogleAppIndexingWarning'
    // InvalidPackageのエラーを除外
    disable 'InvalidPackage'
    disable 'RestrictedApi'
  }

  testOptions {
    unitTests.all {
      // All the usual Gradle options.
      testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        outputs.upToDateWhen { false }
        showCauses true
        showExceptions true
        showStackTraces true
        showStandardStreams true
        exceptionFormat "full"
      }
    }
  }
}

ext.supportLibVersion = '26.0.1'

dependencies {
  compile fileTree(dir: 'libs', include: ['*.jar'])

  // android support libraries
  compile "com.android.support:appcompat-v7:${supportLibVersion}"
  compile "com.android.support:design:${supportLibVersion}"
  compile "com.android.support:recyclerview-v7:${supportLibVersion}"
  compile "com.android.support:cardview-v7:${supportLibVersion}"
  compile "com.android.support:customtabs:${supportLibVersion}"
  compile 'com.android.support.constraint:constraint-layout:1.0.2'
  kapt "com.android.databinding:compiler:2.3.3"

  // Network
  compile 'com.squareup.retrofit2:retrofit:2.3.0'
  compile 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
  compile 'com.squareup.retrofit2:converter-gson:2.3.0'
  compile 'com.squareup.retrofit2:converter-scalars:2.3.0'
  compile 'com.google.code.gson:gson:2.8.1'
  compile 'com.squareup.okhttp3:okhttp:3.8.1'
  compile 'com.squareup.okhttp3:logging-interceptor:3.8.1'

  // Dependency Injection
  compile 'com.google.dagger:dagger:2.11'
  kapt 'com.google.dagger:dagger-compiler:2.11'

  // ReactiveX
  compile 'io.reactivex.rxjava2:rxjava:2.1.1'
  compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
  compile 'io.reactivex.rxjava2:rxkotlin:2.1.0'

  // O/R Mapping
  compile 'com.github.gfx.android.orma:orma:4.2.4'
  kapt 'com.github.gfx.android.orma:orma-processor:4.2.4'

  // SharedPreferences
  compile 'com.rejasupotaro:kvs-schema:5.0.1'
  kapt 'com.rejasupotaro:kvs-schema-compiler:5.0.1'

  // Jsoup
  compile 'org.jsoup:jsoup:1.10.3'

  // UI
  compile 'com.google.android:flexbox:0.3.0'
  compile 'com.github.jd-alexander:LikeButton:0.2.1'
  compile 'com.github.mabbas007:TagsEditText:1.0.5'

  // Util
  compile 'org.parceler:parceler-api:1.1.9'
  kapt 'org.parceler:parceler:1.1.9'

  // Debug
  debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5.1'
  releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
  testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.1'
  compile 'com.jakewharton.timber:timber:4.5.1'
  debugCompile 'com.facebook.stetho:stetho:1.5.0'
  debugCompile 'com.facebook.stetho:stetho-okhttp3:1.5.0'
  debugCompile 'com.facebook.stetho:stetho-timber:1.5.0@aar'
  debugCompile 'com.tomoima.debot:debot:2.0.2'
  releaseCompile 'com.tomoima.debot:debot-no-op:2.0.2'
  debugCompile 'jp.wasabeef:takt:1.0.5'
  compile('com.crashlytics.sdk.android:crashlytics:2.6.8@aar') {
    transitive = true
  }

  androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
    exclude group: 'com.android.support', module: 'support-annotations'
  })
  testCompile 'junit:junit:4.12'


  compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

apply plugin: 'com.google.gms.google-services'
