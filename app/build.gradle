/*
 * Copyright (c) 2016-2018 ayatk.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.cookpad.android.licensetools'
apply plugin: 'io.fabric'

apply from: rootProject.file("android.gradle")

// Keys
def RELEASE_STORE_PASSWORD = (System.getenv("RELEASE_STORE_PASSWORD") != null) ?
    System.getenv("RELEASE_STORE_PASSWORD") : ""
def RELEASE_KEY_ALIAS = (System.getenv("RELEASE_KEY_ALIAS") != null) ?
    System.getenv("RELEASE_KEY_ALIAS") : ""
def RELEASE_KEY_PASSWORD = (System.getenv("RELEASE_KEY_PASSWORD") != null) ?
    System.getenv("RELEASE_KEY_PASSWORD") : ""
def FABRIC_API_KEY = (System.getenv("FABRIC_API_KEY") != null) ?
    System.getenv("FABRIC_API_KEY") : ""

def secretPropsFile = file("$rootDir/secret.properties")
if (secretPropsFile.canRead()) {
  Properties secretProps = new Properties()
  secretProps.load(new FileInputStream(secretPropsFile))
  RELEASE_STORE_PASSWORD = secretProps['RELEASE_STORE_PASSWORD']
  RELEASE_KEY_ALIAS = secretProps['RELEASE_KEY_ALIAS']
  RELEASE_KEY_PASSWORD = secretProps['RELEASE_KEY_PASSWORD']
  FABRIC_API_KEY = secretProps['FABRIC_API_KEY']
}

android {
  defaultConfig {
    applicationId 'com.ayatk.biblio'
    versionCode BUILD_NUM.toInteger()
    versionName VERSION

    buildConfigField "String", "GIT_SHA", "\"${GIT_SHA}\""
    buildConfigField "String", "GIT_BRANCH", "\"${GIT_BRANCH}\""
    buildConfigField "String", "BUILD_NUM", "\"${BUILD_NUM}\""
    buildConfigField "String", "BUILD_TIME", "\"${BUILD_TIME}\""
    manifestPlaceholders = [FABRIC_API_KEY: FABRIC_API_KEY]
  }

  signingConfigs {
    release {
      storeFile file("$rootDir/app.release.jks")
      storePassword RELEASE_STORE_PASSWORD
      keyAlias RELEASE_KEY_ALIAS
      keyPassword RELEASE_KEY_PASSWORD
    }
    debug {
      storeFile file("$rootDir/app.debug.jks")
      storePassword 'android'
      keyAlias 'debug'
      keyPassword 'android'
    }
  }

  buildTypes {
    release {
      shrinkResources true
      debuggable false
      zipAlignEnabled true
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      signingConfig signingConfigs.release
    }

    debug {
      minifyEnabled false
      debuggable true
      zipAlignEnabled true
      applicationIdSuffix '.debug'
      versionNameSuffix "-debug"
      signingConfig signingConfigs.debug
    }
  }
}

configurations {
  ktlint
}

dependencies {

  implementation project(":model")
  implementation project(":infrastructure:database")

  // Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  // androidx libraries
  implementation "androidx.appcompat:appcompat:1.1.0"
  implementation "androidx.cardview:cardview:1.0.0"
  implementation "androidx.browser:browser:1.0.0"
  implementation "androidx.preference:preference:1.0.0-alpha3"
  implementation "androidx.constraintlayout:constraintlayout:1.1.3"
  implementation "androidx.core:core-ktx:1.0.0-alpha3"

  // Android Architecture Components
  implementation "androidx.lifecycle:lifecycle-runtime:2.2.0-rc02"
  implementation "androidx.lifecycle:lifecycle-extensions:2.2.0-rc02"
  implementation "androidx.lifecycle:lifecycle-reactivestreams:2.2.0-rc02"
  kapt "androidx.lifecycle:lifecycle-compiler:2.2.0-rc02"

  // Network
  implementation "com.squareup.retrofit2:retrofit:2.6.2"
  implementation "com.squareup.retrofit2:converter-gson:2.6.2"
  implementation "com.squareup.retrofit2:converter-scalars:2.6.2"
  implementation "com.squareup.retrofit2:adapter-rxjava2:2.6.2"

  implementation "com.google.code.gson:gson:2.8.6"

  implementation "com.squareup.okhttp3:okhttp:3.10.0"
  implementation "com.squareup.okhttp3:logging-interceptor:3.10.0"

  // Dependency Injection
  implementation "com.google.dagger:dagger:2.25.2"
  implementation "com.google.dagger:dagger-android:2.16"
  implementation "com.google.dagger:dagger-android-support:2.16"
  kapt "com.google.dagger:dagger-compiler:2.16"
  kapt "com.google.dagger:dagger-android-processor:2.16"

  // ReactiveX
  implementation "io.reactivex.rxjava2:rxjava:2.2.15"
  implementation "io.reactivex.rxjava2:rxandroid:2.1.1"
  implementation "io.reactivex.rxjava2:rxkotlin:2.4.0"

  // SharedPreferences
  implementation "com.rejasupotaro:kvs-schema:5.1.0"
  kapt "com.rejasupotaro:kvs-schema-compiler:5.1.0"

  // Jsoup
  implementation "org.jsoup:jsoup:1.12.1"

  // ----------------------------------------
  // UI
  // ----------------------------------------
  implementation "com.google.android.material:material:1.0.0-alpha3"
  implementation 'com.google.android:flexbox:2.0.0'
  implementation "com.xwray:groupie:2.1.0"
  implementation "com.xwray:groupie-databinding:2.1.0"

  // Util
  implementation "org.greenrobot:eventbus:3.1.1"

  // ----------------------------------------
  // Debug
  // ----------------------------------------
  implementation "com.jakewharton.timber:timber:4.7.1"

  debugImplementation "com.squareup.leakcanary:leakcanary-android:1.6.3"

  debugImplementation "com.facebook.stetho:stetho:1.5.1"
  debugImplementation "com.facebook.stetho:stetho-okhttp3:1.5.1"
  debugImplementation "com.facebook.stetho:stetho-timber:1.5.1@aar"

  debugImplementation "com.tomoima.debot:debot:2.0.5"
  debugImplementation "jp.wasabeef:takt:2.0.1"

  implementation("com.crashlytics.sdk.android:crashlytics:2.10.1@aar") {
    transitive = true
  }

  // ----------------------------------------
  // Test
  // ----------------------------------------
  testImplementation "androidx.test:runner:1.3.0-alpha03"
  testImplementation 'androidx.arch.core:core-testing:2.1.0'

  androidTestImplementation "androidx.test:runner:1.3.0-alpha03"
  androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0-alpha02"
  androidTestImplementation "androidx.test.espresso:espresso-contrib:3.1.0-alpha3"

  // ----------------------------------------
  // Lint
  // ----------------------------------------
  ktlint "com.github.shyiko:ktlint:0.24.0"
}

task ktlint(type: JavaExec, group: "verification") {
  description = "Check Kotlin code style."
  main = "com.github.shyiko.ktlint.Main"
  classpath = configurations.ktlint
  args "src/**/*.kt", "--reporter=plain", "--reporter=checkstyle,output=${project.buildDir}/reports/ktlint/ktlint.xml"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
  description = "Fix Kotlin code style deviations."
  main = "com.github.shyiko.ktlint.Main"
  classpath = configurations.ktlint
  args "-F", "src/**/*.kt"
}

apply plugin: 'com.google.gms.google-services'
