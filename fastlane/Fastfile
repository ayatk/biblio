fastlane_version '2.62.1'

default_platform :android

platform :android do
  before_all do
    ENV['SLACK_URL'] = 'https://hooks.slack.com/services/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'
    gradle(task: 'generateLicensePage')
  end

  desc 'Submit a new Nightly Build to DeployGate'
  lane :nightly do
    gradle(task: 'assembleNightly')
    deploygate(
        api_token: ENV['DEPLOY_GATE_API_KEY'],
        user: 'ayatk',
        apk: "#{ENV['ROOT_DIR']}/app/build/outputs/apk/nightly/biblio-v#{ENV['VERSION']}-#{ENV['CIRCLE_BUILD_NUM']}.apk",
        message: "Build #{ENV['CIRCLE_BUILD_NUM']}",
        release_note: "Build #{ENV['CIRCLE_BUILD_NUM']}",
        distribution_key: '3f542ebaa365a1893d3467b34eb27c0a77ca67a7'
    )
  end

  desc 'Deploy a new version to the Google Play'
  lane :deploy do
    track = ENV['VERSION'].dup
    gradle(task: 'assembleRelease')
    supply(
        track: track[/\d+\.\d+\.\d+-(\w*\d*)/, 1] || 'production',
        apk: "#{ENV['ROOT_DIR']}/app/build/outputs/apk/release/biblio-v#{ENV['VERSION']}-#{ENV['CIRCLE_BUILD_NUM']}.apk"
    )
  end

  # You can define as many lanes as you want
  after_all do |lane|
    # This block is called, only if the executed lane was successful
    slack(
        message: 'Successfully deployed new App Update.'
    )
  end

  error do |lane, exception|
    slack(
        message: exception.message,
        success: false
    )
  end
end
