/*
 * Copyright (c) 2016-2018 ayatk.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
  ext.kotlin_version = '1.3.72'

  repositories {
    google()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
  }

  dependencies {
    classpath "com.android.tools.build:gradle:3.6.3"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath "com.google.gms:google-services:4.3.3"
    classpath "com.cookpad.android.licensetools:license-tools-plugin:1.7.0"
    classpath "io.fabric.tools:gradle:1.31.2"
  }
}

plugins {
  id 'com.github.ben-manes.versions' version '0.27.0'
  id 'io.gitlab.arturbosch.detekt' version '1.0.0.RC7-2'
}

ext {
  APP_NAME = 'biblio'
  VERSION = '0.2.4-alpha'

  // for debug info
  GIT_SHA = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
  GIT_BRANCH = (System.getenv('CIRCLE_BRANCH') != null) ? System.getenv('CIRCLE_BRANCH') :
      'git rev-parse --abbrev-ref HEAD'.execute([], project.rootDir).text.trim()
  BUILD_NUM = (System.getenv('CIRCLE_BUILD_NUM') != null) ? System.getenv('CIRCLE_BUILD_NUM') : '1'
  BUILD_TIME = new Date().format("yyyy-MM-dd'T'HH:mm'Z'", TimeZone.getTimeZone('UTC'))
}

allprojects {
  repositories {
    google()
    jcenter()
    maven { url "https://jitpack.io" }
    maven { url 'https://maven.fabric.io/public' }
  }

  project.plugins.whenPluginAdded { plugin ->
    if ("com.android.build.gradle.AppPlugin" == plugin.class.name) {
      project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
    } else if ("com.android.build.gradle.LibraryPlugin" == plugin.class.name) {
      project.android.dexOptions.preDexLibraries = rootProject.ext.preDexLibs
    }
  }
}

detekt {
  version = "1.0.0.RC7-2"
  profile("main") {
    input = "$projectDir/app"
    config = "$projectDir/detekt.yml"
    filters = ".*/build/.*,.*/resources/.*,.*/tmp/.*"
    output = "${project.buildDir}/reports/detekt"
    parallel = true
  }
}

project.ext {
  // 引き数に -PdisablePreDex が指定されていたかどうか
  preDexLibs = !project.hasProperty('disablePreDex')
}

task clean(type: Delete) {
  delete rootProject.buildDir
}
